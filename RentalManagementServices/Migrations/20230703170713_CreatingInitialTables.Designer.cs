// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentalManagementServices.Infrastructure.Data;

#nullable disable

namespace RentalManagementServices.Migrations
{
    [DbContext(typeof(RentalDbContext))]
    [Migration("20230703170713_CreatingInitialTables")]
    partial class CreatingInitialTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RentalManagementServices.Core.Entities.WorkerRoom", b =>
                {
                    b.Property<long>("WorkerId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.HasKey("WorkerId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("WorkerRooms");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Pricing", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("DepositAmount")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pricing");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Dimension")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVacant")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TenantId")
                        .IsUnique();

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Tenant", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DateofJoin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateofVacating")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Tenants");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Transaction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BankReference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Channel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MpesaReference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Narration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PricingId")
                        .HasColumnType("bigint");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BankReference")
                        .IsUnique()
                        .HasFilter("[BankReference] IS NOT NULL");

                    b.HasIndex("MpesaReference")
                        .IsUnique()
                        .HasFilter("[MpesaReference] IS NOT NULL");

                    b.HasIndex("Reference")
                        .IsUnique()
                        .HasFilter("[Reference] IS NOT NULL");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Worker", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DateofEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofJoin")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NationalId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Entities.WorkerRoom", b =>
                {
                    b.HasOne("RentalManagementServices.Core.Room", "Room")
                        .WithMany("WorkerRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RentalManagementServices.Core.Worker", "Worker")
                        .WithMany("WorkerRooms")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Room", b =>
                {
                    b.HasOne("RentalManagementServices.Core.Tenant", "Tenant")
                        .WithOne("Room")
                        .HasForeignKey("RentalManagementServices.Core.Room", "TenantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Room", b =>
                {
                    b.Navigation("WorkerRooms");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Tenant", b =>
                {
                    b.Navigation("Room");
                });

            modelBuilder.Entity("RentalManagementServices.Core.Worker", b =>
                {
                    b.Navigation("WorkerRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
